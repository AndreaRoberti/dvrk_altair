// -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
// ex: set filetype=cpp softtabstop=4 shiftwidth=4 tabstop=4 cindent expandtab:

inline-header {
#include <cisstVector/vctFixedSizeVectorTypes.h>
#include <cisstVector/vctTransformationTypes.h>
#include <cisstMultiTask/mtsGenericObject.h>
#include <cisstParameterTypes/prmForwardDeclarations.h>
// Always include last
#include <cisstParameterTypes/prmExport.h>
}

class {
    name prmPositionCartesianSet; // required

    attribute CISST_EXPORT;

    base-class {
        type mtsGenericObject;
        is-data true;
    }

    member {
        name Goal;
        type vctDoubleFrm3;
        description Desired position;
    }

    member {
        name Velocity;
        type vctDouble3;
        default vctDouble3(0.0);
        description Linear velocity that should be used for the trajectory generator.;
    }

    member {
        name VelocityAngular;
        type vctDouble3;
        default vctDouble3(0.0);
        description Angular velocity that should be used for the trajectory generator.;
    }

    member {
        name Acceleration;
        type vctDouble3;
        default vctDouble3(0.0);
        description Linear acceleration and deceleration that should be used for the trajectory generator.;
    }

    member {
        name AngularAcceleration;
        type vctDouble3;
        default vctDouble3(0.0);
        description Angular acceleration and deceleration that should be used for the trajectory generator.;
    }

    member {
        name Mask;
        type vctBool2;
        default true;
        description Two tuple, masks position/orientation parts of the Cartesian motion;
    }

    member {
        name MovingFrame;
        type std::string;
        default std::string();
        description Name of moving frame;
    }

    member {
        name ReferenceFrame;
        type std::string;
        default std::string();
        description Name of reference frame;
    }

    // from original prmMotionBase
    member {
        name BlockingFlag;
        type prmBlocking;
        default prmBlocking::NO_WAIT;
        deprecated true;
    }
    member {
        name BlendingFactor;
        type bool;
        default false;
        deprecated true;
    }
    member {
        name IsPreemptable;
        type bool;
        default true;
        deprecated true;
    }
    member {
        name IsGoalOnly;
        type bool;
        default true;
        deprecated true;
    }

    inline-header {
    private:
        CMN_DECLARE_SERVICES(CMN_DYNAMIC_CREATION, CMN_LOG_ALLOW_DEFAULT);
    }
}


inline-header {
CMN_DECLARE_SERVICES_INSTANTIATION(prmPositionCartesianSet);
}
